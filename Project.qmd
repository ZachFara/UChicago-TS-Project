---
title: "TSProject"
format: html
editor: visual
---

```{r}
library(readxl)
library(lubridate)
library(imputeTS)
library(zoo)
library(dplyr)
library(tidyr)
library(lubridate)
library(imputeTS)
library(ggplot2)
library(forecast)

df <- read_excel("./air+quality/AirQualityUCI.xlsx")

# Combine date and time columns into date-time
df$DateTime <- ymd(df$Date) + hms(format(df$Time, "%H:%M:%S"))

# Now let's fill all -200s with NA
df[df == -200] <- NA

# Fill NA
df$filled_CO <- na_interpolation(df$`CO(GT)`, option = "spline")
df$filled_T <- na_interpolation(df$`T`, option = "spline")
df$filled_RH <- na_interpolation(df$`RH`, option = "spline")
df$filled_AH <- na_interpolation(df$`AH`, option = "spline")

# Make graphs of the NA interpolation that happened to verify that it looks nice

graph.interpolation <- function(ts,var1, var2, name){
  ggplot_na_imputations(ts[[var1]], ts[[var2]], size_points = .4, size_imputations = .4) + 
    labs(title= name,
         x = "Year-Month",
         y = "Price",
         color = "Data Type")
}

graph.interpolation(df, "CO(GT)", "filled_CO", "Carbon Monoxide (BEFORE CLEANING)")
graph.interpolation(df, "T", "filled_T", "Temperature")
graph.interpolation(df, "RH", "filled_RH", "Relative Humidity")
graph.interpolation(df, "AH", "filled_AH", "Absolute Humidity")

# Let's do some TS outlier detection
df$filled_CO <- tsclean(df$filled_CO)

graph.interpolation(df, "CO(GT)", "filled_CO", "Carbon Monoxide (AFTER CLEANING)")

# Drop other columns
df <- df %>%
  select(filled_CO, filled_T, filled_RH, filled_AH, DateTime)
```

Maybe here we need to do some TS anomaly detection and correction.

```{r}
library(corrplot)
# Now find correlations

# Calculate correlation matrix
df_subset <- df[, !colnames(df) %in% "DateTime"]
correlation_matrix <- cor(df_subset, use = "complete.obs")
corrplot(correlation_matrix, method = "color", type = "upper", order = "hclust", tl.col = "black", tl.srt = 45, addCoef.col = "black")

acf(df$filled_CO, lag.max = 200)
pacf(df$filled_CO, lag.max = 50)

ggplot(df, aes(x = DateTime, y = filled_CO)) +
  geom_line(group = 1, colour = "black", size = .2) +  # Line plot
  labs(title = "Time Series Plot", x = "Date", y = "Value") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
